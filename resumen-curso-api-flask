/******************************************************************************************************/
>>>> RESUMEN CURSO
/******************************************************************************************************/

Crear entorno virtual
python -m venv env

Activar entorno virtual
source env/bin/activate

Creamos una carpeta la cual tendrá nuestra aplicación
mkdir api

Crear archivo principal main.py

Creamos un nueva carpeta llamada app que sera un modulo para eso es necesario crear el archivo __init__.py

Instalar las dependencias de flask
pip install flask

Levantar servidor flask
python main.py

Crear archivo .gitignore
touch .gitignore

Crear archivo requirements
pip freeze > requirements.txt

Crear archivo de configuración

Comando para eliminar los archivos .pyc
find . -name "*.pyc" -exec git rm -f "{}" \;

Conectar nuesta aplicación con el gestor de base de datos PostgreSQL

ALTER USER postgres with encrypted password '123';

Ingresar al gestor de base de datos
sudo -u postgres psql

Crear base de datos
CREATE DATABASE api_flask;

Utilizar base de datos
\c api_flask

Las tablas las vamos a crear con el ORM

Intalar SQLAlchemy
pip install Flask-SQLAlchemy

Agregar en nuestro archivo de configuración los datos de nuestra base de datos

Crear un nuevo folder app/models donde estaran todos nuestros modelos

Crear modelo/tabla tareas

Intalar dependencia para conectar con postgress
pip install psycopg2-binary

Select * from tasks;

Modulo Blueprints:
proyecto mucho mas robusto y flexible

Crear enpoints (GET, POST, PUT, DELETE)

Manejo de respuestas del servidor

Crear registro, insertar registro
Listar registros
Buscar registro
Responder con un error al cliente not_found 404

Test unitarios
Crear base de datos para los Test

Crear test unitarios
Crear test unitarios para respuestas 404

Codigo para ver detalle de los resultados de los test unitarios
python test.py -v



Creando una clave SSH (Github)
ls -al ~/.ssh
ssh-keygen -t rsa -b 4096 -C "cris.vidal04@gmail.com"
$ eval "$(ssh-agent -s)"
> Agent pid 59566
ssh-add ~/.ssh/id_rsa
sudo apt-get install xclip
xclip -sel clip < ~/.ssh/id_rsa.pub

pip install requirements.txt
pip install -r requirements.txt
pip install --upgrade -r requirements.txt